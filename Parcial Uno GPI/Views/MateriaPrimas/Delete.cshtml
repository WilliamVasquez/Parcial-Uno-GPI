@model Parcial_Uno_GPI.Models.MateriaPrima

@{
    ViewBag.Title = "Eliminar Materia Prima";
}

<h2>Eliminar</h2>

<h3>¿Esta seguro que desea eliminar este registro?</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="text-center text-uppercase text-danger my-5">
            <h1 class="display-6">Eliminar Materia Prima</h1>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idMaterial)

        <div class="mb-3 row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.nombreMat, htmlAttributes: new { @class = "form-label badge badge-primary" })
                    <div class="col">
                        @Html.EditorFor(model => model.nombreMat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                       
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.descripcionMat, htmlAttributes: new { @class = "form-label badge badge-primary" })
                    <div class="col">
                        @Html.TextAreaFor(model => model.descripcionMat, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.descripcionMat, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.medida, htmlAttributes: new { @class = "form-label badge badge-primary" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.medida, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.medida, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="mb-3 row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.stock, htmlAttributes: new { @class = "form-label badge badge-primary" })
                    <div class="col">
                        @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.stockMinimo, htmlAttributes: new { @class = "form-label badge badge-primary" })
                    <div class="col">
                        @Html.EditorFor(model => model.stockMinimo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.stockMinimo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="form-group">
                    @*@Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "form-label badge badge-primary" })*@
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.HiddenFor(model => model.estado, new { @Value = "0" })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="my-5 d-flex justify-content-center align-content-center">
            <div class="mx-3">
                <input type="submit" value="Eliminar" class="btn btn-danger" />
            </div>

            <div class="mx-3">
                <input type="button" name="" value="Regresar" class="btn btn-secondary" onclick="location.href = '@Url.Action("Index", "MateriaPrimas")'" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

